
[블록체인]
- 블록체인원리에 기반한 간단한 블록체인(분산X)을 제작함
- 이전 해시값과 서로 연결된 블록들을 생성해 단일 블록체인을 실습해봄

동작원리
- 새로운 해시는 index, proof, prev_hash (제네시스블록은 prev를 '0'으로 정의)로 생성, 아래와 같은 연산으로
- 여기서 proof는 약간 nonce개념으로 사용됨
- 정해진 연산에 따라 proof를 넣고 while문으로 +1을 하면서 (선행제로가 4개나올때까지)SHA256 알고리즘을 돌리고 최종적으로
쌓인 proof(nonce)를 채굴된(새로운) 블록의 proof(nonce)로 넣는다, proof(nonce)를 계속 바꿔가며 연산하는것 -> 이게중요! 면접전에 한번 꼼꼼하게 분석

1. 블록체인을 만들고 플라스크로 배포한뒤 로컬에서 포스트맨으로 확인해본다.
1.1) 블록을 만드는 API -> /mine_block
1.2) 체인을 확인하는 API -> /get_chain
1.3) 유효한 체인인지 확인하는 API -> /is_valid -> 이거는 체인의 모든 블록을 돌면서 prev가 이전블록의 hash랑 같은지 체크
하나라도 틀릴경우 유효하지 않은 체인으로 판단!


[암호화폐]
사람들이 거래한내용을 트랜잭션에 저장하고, 블록체인을 한번 채굴할때마다 트랜잭션에 기입된 내용들을 적어주고 훈코인을 1개씩 얻는것!

- 위에서 만든 블록체인을 기반으로 암호화폐 실습(훈코인 만들기)
- 무엇이 블록체인을 암호화폐로 만드냐 -> 트랜잭션
-> 사용자들로 하여금 채굴자들이 채굴한새로운 블록에 추가된 안전한 트랜잭션을 통해
새로운 블록에 트랜잭션을 발생 시켜 암호화폐를 교환할 수 있도록 한다
- 트랜잭션이 모이면 채굴자가 블록을 채굴하는 동시에 모였던 트랜잭션이 해당블록에 추가되는 방식

포스트맨 실습
- 노드 5001,5002,5003이 서로 상호작용하는 데모 (탈중앙화된 블록체인 테스트)
1. 3개 파이썬 파일(5001,5002,5003)을 각자 실행하고

2. 포스트맨으로 get_chain(GET) API를 각자 포트별로(5001,5002,5003) 실행하여 블록을 1개씩 갖는다.
하지만 아직까지는 각자 독립적인데, 합의 과정을 거쳐서 모든 노드가 같은 채인을 갖게 할것임

중요!!!!
2. 노드를 서로 연결하는 connect_node(POST) API -> 바디값에 각자 다른 노드(5001이면 5002,5003을 기입)를 기입하고
각자 연결(아직까지는 합의과정X)
-> 이제 블록체인이 각자 블록을 채굴할때마다 같이 연동됨(탈중앙화)

3. 5001에서 get_mine(GET)을 하여 생성하기 
(이때 5001은 위에서 한것과 더불어 2개를 같지만 5002,5003에서 겟체인하면 아직 1개임(합의 아직 안이루어짐))

4. 5002에서 replace_chain(GET)하면 5001에서 추가한 블록을 가지고옴 (합의 과정)

5. 트랜잭션보내기 add_transaction(POST)(이거는 채굴이아니고 단순 트랜잭션을 쌓기 위함임)
5001에서 5002로 10000개 보내기

6. 이후에 5001(누구든상관X)이 mine_block(GET)을 통해 채굴하면 이전에 트랜잭션에 기입한게 올라옴(이후 초기화)
3번째 블록의 트랜잭션에는 5번에서 보낸 기록이 명세되어있음 

7.이제 5001이 채굴했으니까 5001의 채인은 업뎃(3개블록)되어있지만 나머지2개는 아직 합의가 안이루어짐

8.나머지(5002,5003)에서는 아직 2개의 블록임 그래서 합의(replace_chain)이 다시 이루어져야함

느낀점 : 코드로 각자 로컬에서 실행한 3개의 포트가 연결되며 한개의 체인을 공유하는게 신기했음
